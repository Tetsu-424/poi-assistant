このサイトは艦隊これくしょん（艦これ）というwebブラウザゲームの補助機能を詰め込んだサイトです。
昔一週間程度かけて作ったものに改良を加えました。
今回はその際に課題だった入力内容の保持を実装しようと思いました。（真ん中の要素で実装しました。）

左側の要素は様々なお役立ちサイトを載せています。（個人利用なので勝手に載せています）
リンクをクリックすると、別タブで開くようになっています。
一番下には公式のTwitterが埋め込まれています。

真ん中の要素では、キャラ名と装備を自分で入力することができます。
Garlic.jsを利用して、ページを更新しても入力内容を保持することができます。
各行ごとにリセットボタンを押すことでリセットできます。（Garlicの仕様上、送信ボタンを偽装しているので、毎回ページが更新されます。課題点です。）
最初は真ん中にゲーム画面を埋め込んで、このページで遊べるようにしていたのですが、ゲーム側のFlash→html5移行によってエラーを吐くようになってしまいました。
艦これのソースコードからゲームが動いている領域のみのURLを探しだすところまでは行きましたが（htmlのコードにコメントアウトしてます）、丸一日頑張ってもhtml5版の艦これを埋め込んで動かすことができず、
今回は上記の新機能を実装するに至りました。悔しいです。

右側の要素の「遠征」では、プルダウンから任意の遠征（時間経過でアイテムが獲得できるシステム）を選択することで、
自動でタイマーをセットしてリアルタイムでカウントダウンしてくれます。
Push.jsで通知機能を実装して、遠征開始と終わりのタイミングで通知を飛ばしてくれます。
終わりの通知を押すと、艦これのゲームページに飛ぶことができます。
ローカル環境では通知が飛ばないため、簡易的なwebサーバーを立てることで通知を確認できます。
Visual Studio CodeのLive Serverや、Macのpythonをつかった簡易Webサーバーでは動作を確認できました。

「入渠」では、キャラクターの回復までにかかる時間を自動計算し、カウントダウンしてくれます。
ゲームのwikiから得た計算式に必要情報を当てはめることで実装しています。（ゲーム内で実際に確認もして、正確であることを確認しました。）
これも回復が終わった時に通知してくれます。

「最大HP検索」では、キャラ毎の最大HPをリアルタイムに検索できます。
Vue.jsを使って実装しました。
キャラの種類か名前を入れることで検索できます。
データベースは昔作ったものなので古いです。（手打ちで作るのに丸二日かかったのを覚えています。）

レイヤー？のせいでボタンが反応しないことがあり、z-indexの設定やボックスの領域設定を調整することで解決しました。
遠征の時間管理を個別で行わなければいけないため、jsファイルを個別にしました。（なぜか同一ファイルだとうまくいきませんでした）


-課題-
1.通知をおしてゲームに飛んだときや、ページを更新した際に、タイマーが保持されない。
2.入力フォームに入れられる文字列に特別制限がないため、公開するにはセキュリティ上の問題がある。
3.不正な入力に対応できない。（ボタンの連打で壊れる問題は前回の課題だったため、タイマーが0になるまで開始入力をロックすることで改善しました。）
4.パソコンでフルスクリーンを想定しているため、レスポンシブデザインに対応していない。
5.Chrome以外のブラウザでのデバックはできていないため、未知のバグがあるかもしれない。
6.変数名や関数で似通っている名前をつけてしまったものが多いため、コードが煩雑でわかりにくい。
